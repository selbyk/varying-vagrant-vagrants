# Default local nginx (web server) configurations
#
# Configurations are provided for 3 default sites in this file:
#
#   http://192.168.50.4
#       - Standard handling for php files, no WordPress
#       - Files available locally in this repository's www/default
#       - Files available on guest (vagrant ssh) in /srv/www/default
#   http://local.wordpress.dev
#       - Latest stable version of WordPress
#       - Files available locally in this repository's www/wordpress-default
#       - Files available on guest (vagrant ssh) in /srv/www/wordpress-default
#   http://local.wordpress-trunk.dev
#       - SVN repository of WordPress trunk
#       - Files available locally in this repository's www/wordpress-trunk
#       - Files available on guest (vagrant ssh) in /srv/www/wordpress-trunk
#

################################################################
# Default nginx catch-all server
#
# http://192.168.50.4 - this server configuration provides a catch
# all for any domains that point to this IP address but are not 
# specified through a server configuration. Files placed in the
# /srv/www/default directory are accessible through this IP. It is
# not intended to run WordPress through this directory.
server {
    listen       80;
    server_name  192.168.50.4;
    root         /srv/www/default;
    
    location / {
        index index.php;
        try_files $uri $uri/ /index.php?$args;
    }

    gzip off;

    # Directives to send expires headers and turn off 404 error logging.
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires 24h;
        log_not_found off;
    }

    # this prevents hidden files (beginning with a period) from being served
	      location ~ /\.          { access_log off; log_not_found off; deny all; }

    location ~ \.php$ {
        client_max_body_size 25M;
        try_files      $uri =404;

        # Include the fastcgi_params defaults provided by nginx
        include        /etc/nginx/fastcgi_params;

        # SCRIPT_FILENAME is a required parameter for things to work properly,
        # but is missing in the default fastcgi_params. We define it here to
        # be sure that it exists.
        fastcgi_param   SCRIPT_FILENAME         $document_root$fastcgi_script_name;

        # Use the upstream for fastcgi / php5-fpm that we defined in nginx.conf
        fastcgi_pass   php;

        # And get to serving the file!
        fastcgi_index  index.php;
    }
}

# Implement upstream connection to PHP-FPM
# "phpfpm" here is a name for this upstream connection, which you can customize
# I create a custom upstream connection per vhost, to better segregate PHP processes by vhost
# To do the same, you need a unique upstream name, and a unique filename for your php5-fpm.sock file
upstream phpfpm {
    #server unix:/var/run/php5-fpm.sock;
    #avoid sockets for nginx-fpm on Linux, they are good for BSD
    server 127.0.0.1:9000;
}

server {
    listen 80;
    set $host_path "/srv/www/sparehanger/sparehanger";
    #access_log  /www/mysite/log/access.log  main;

    server_name  local.sparehanger.dev;
    root   $host_path;
    set $yii_bootstrap "index.php";

    charset utf-8;

    location / {
        root $host_path;
	index index.php;

	if (-f $request_filename) {
	break;
	}

	if (!-e $request_filename) {
	    rewrite ^/(.+)$ /index.php?url=$1 last;
	    break;
	}
    }

    location ~ ^/(protected|framework|themes/\w+/views) {
        deny  all;
    }

    #avoid processing of calls to unexisting static files by yii
    location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)$ {
        try_files $uri =404;
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    location ~ \.php {
        fastcgi_split_path_info  ^(.+\.php)(.*)$;

        #let yii catch the calls to unexising PHP files
        set $fsn /$yii_bootstrap;
        if (-f $document_root$fastcgi_script_name){
            set $fsn $fastcgi_script_name;
        }

        fastcgi_pass   127.0.0.1:9000;
        include fastcgi_params;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fsn;

        #PATH_INFO and PATH_TRANSLATED can be omitted, but RFC 3875 specifies them for CGI
        fastcgi_param  PATH_INFO        $fastcgi_path_info;
        fastcgi_param  PATH_TRANSLATED  $document_root$fsn;
    }

    location ~ /\.ht {
        deny  all;
    }
}